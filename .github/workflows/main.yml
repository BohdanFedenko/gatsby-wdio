# This is a basic workflow to help you get started with Actions

name: Test 
# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  merge-from-master:
    runs-on: ubuntu-latest
    steps:
      - name: Merge master -> Testing
        uses: devmasx/merge-branch@v1.3.1
        with:
          type: now
          from_branch: master
          target_branch: Testing
          github_token: ${{ github.token }}
  merge:
    needs: merge-from-master
    runs-on: ubuntu-latest
    steps:
    - name: Merge from current branch to the Testing
      uses: devmasx/merge-branch@v1.3.1
      with:
          type: now
          target_branch: Testing
          github_token: ${{ github.token }}
  wdio-windows-browsers:
    needs:  merge
    runs-on: windows-2016
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      # Install NPM dependencies, cache them correctly
      # and run all Cypress tests
        with:
    # The branch, tag or SHA to checkout. When checking out the repository that
    # triggered a workflow, this defaults to the reference or SHA for that event.
    # Otherwise, defaults to `master`.
            ref: 'Testing' 
      - name: NPM Install
        run: npm install
      - name: Run tests on windows browser (Chrome, Firefox, Edge)
        run: npm run winBrowsers        
# Upload artifacts
      - name: Upload allure-results
        if: always()
        continue-on-error: true
        uses: actions/upload-artifact@v2
        with:
          name: allure-results-windows
          path: allure-results
          
  wdio-safri-macOs:
    needs:  merge
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      # Install NPM dependencies, cache them correctly
      # and run all Cypress tests
        with:
    # The branch, tag or SHA to checkout. When checking out the repository that
    # triggered a workflow, this defaults to the reference or SHA for that event.
    # Otherwise, defaults to `master`.
            ref: 'Testing'
      - name: 'NPM Install'
        run: npm install
      - name: Run in Safari first time 
        shell: bash
        run: sudo /usr/bin/safaridriver --enable
      - name: Display structure of files
        run: ls -R
      - name: Run in Safari  
        run: npm run safariLocal         
# Upload artifacts
      - name: Upload allure-results
        if: always()
        continue-on-error: true
        uses: actions/upload-artifact@v2
        with:
          name: allure-results-safari-macOs
          path: allure-results
  wdio-chrome-macOs:
    needs:  merge
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      # Install NPM dependencies, cache them correctly
      # and run all Cypress tests
        with:
    # The branch, tag or SHA to checkout. When checking out the repository that
    # triggered a workflow, this defaults to the reference or SHA for that event.
    # Otherwise, defaults to `master`.
            ref: 'Testing'
      - name: 'NPM Install'
        run: npm install
      - name: Run in Chrome
        run: npm run chromeMacOs        
# Upload artifacts
      - name: Upload allure-results
        if: always()
        continue-on-error: true
        uses: actions/upload-artifact@v2
        with:
          name: allure-results-chrome-macOs
          path: allure-results

#  Launch separately   
  allure:
    if: always()
    needs: [wdio-windows-browsers, wdio-safri-macOs, wdio-chrome-macOs]
    name: Generate Allure Report
    runs-on: ubuntu-latest
    steps:
      - name: Download allure-results
        uses: actions/download-artifact@v2
        with:
          path: allure-results
#       - uses: actions/checkout@v2
      - name: copy win drowsers
        if: always()
        continue-on-error: true
        shell: bash
        run: cp -a ~/work/gatsby-wdio/gatsby-wdio/allure-results/allure-results-windows/* ~/work/gatsby-wdio/gatsby-wdio/allure-results/  
      - name: copy file safari-macOs
        if: always()
        continue-on-error: true
        shell: bash
        run: cp -a ~/work/gatsby-wdio/gatsby-wdio/allure-results/allure-results-safari-macOs/* ~/work/gatsby-wdio/gatsby-wdio/allure-results/
      - name: copy file chrome-macOs
        if: always()
        continue-on-error: true
        shell: bash
        run: cp -a ~/work/gatsby-wdio/gatsby-wdio/allure-results/allure-results-chrome-macOs/* ~/work/gatsby-wdio/gatsby-wdio/allure-results/

      - name: Get Allure history
        uses: actions/checkout@v2
        if: always()
        continue-on-error: true
        with:
          ref: gh-pages
          path: gh-pages
      - name: Allure Report action from marketplace
        uses: simple-elf/allure-report-action@master
        if: always()
        #id: allure-report
        with:
          allure_results: allure-results
          #gh_pages: gh-pages
          #allure_report: allure-report
          allure_history: allure-history
          keep_reports: 20
      - name: Display structure of downloaded files
        run: ls -R

      - name: Deploy report to Github Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v2
        env:
          PERSONAL_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PUBLISH_BRANCH: gh-pages
          PUBLISH_DIR: allure-history
